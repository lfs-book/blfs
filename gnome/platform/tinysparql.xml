<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY tinysparql-download-http
           "&gnome-download-http;/tinysparql/3.9/tinysparql-&tinysparql-version;.tar.xz">
  <!ENTITY tinysparql-download-ftp  " ">
  <!ENTITY tinysparql-md5sum        "9b5a0e4b2f8baeb19f7f57eaf08eee47">
  <!ENTITY tinysparql-size          "2.0 MB">
  <!ENTITY tinysparql-buildsize     "62 MB (with tests)">
  <!ENTITY tinysparql-time          "0.4 SBU (with tests)">
]>

<sect1 id="tinysparql" xreflabel="tinysparql-&tinysparql-version;">
  <?dbhtml filename="tinysparql.html"?>


  <title>tinysparql-&tinysparql-version;</title>

  <indexterm zone="tinysparql">
    <primary sortas="a-tinysparql">tinysparql</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Tinysparql</title>

    <para>
      <application>Tinysparql</application> is a low-footprint RDF triple store
      with a SPARQL 1.1 interface.
    </para>

    &lfs123_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&tinysparql-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&tinysparql-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &tinysparql-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &tinysparql-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &tinysparql-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &tinysparql-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Tinysparql Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="json-glib"/> and
      <xref linkend="vala"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      &gobject-introspection;,
      <xref linkend="icu"/>,
      <xref linkend="libsoup3"/>,
      <xref linkend="localsearch"/> (runtime),
      <xref linkend="pygobject3"/>, and
      <xref linkend="sqlite"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="asciidoc"/>,
      <xref linkend="avahi"/>,
<!--  It looks like not used even if docs=true,
      the pre-built doc is shipped in tarball and will be installed
      <xref linkend="gi-docgen"/>
-->
      <xref linkend="graphviz"/>,
      <ulink url="https://github.com/scop/bash-completion/">bash-completion</ulink>, and
      <ulink url="https://snowballstem.org/">libstemmer</ulink>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Tinysparql</title>

    <warning revision="systemd">
      <para>
        If you are upgrading this package from a version that was from when
        this package was known as <application>Tracker</application>, remove
        a file that will cause a conflict as the &root; user:
      </para>
    </warning>

<screen revision="systemd"><userinput>rm -fv /usr/lib/systemd/user/tracker-xdg-portal-3.service</userinput></screen>

    <para>
      Fix the location to install the documentation into:
    </para>

<screen><userinput>sed -e "s/'generate'/&amp;, '--no-namespace-dir'/"         \
    -e "/--output-dir/s/@OUTPUT@/&amp;\/tinysparql-&tinysparql-version;/" \
    -i docs/reference/meson.build</userinput></screen>

    <para>
      Install <application>Tinysparql</application> by running the following
      commands:
    </para>

<screen revision="systemd"><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup --prefix=/usr       \
            --buildtype=release \
            -D man=false        \
            ..                  &amp;&amp;
ninja</userinput></screen>

<screen revision="sysv"><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup --prefix=/usr                  \
            --buildtype=release            \
            -D man=false                   \
            -D systemd_user_services=false \
            ..                            &amp;&amp;
ninja</userinput></screen>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>

    <para>
      To test the results, issue: <command>meson configure -D debug=true
      &amp;&amp; LC_ALL=C.UTF-8 ninja test</command>.
      The test suite should be run from a graphical session. One test is known
      to fail due to the manual pages not being generated.
    </para>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/meson-buildtype-release.xml"/>

    <para>
      <parameter>-D man=false</parameter>: This switch prevents the build
      process from generating man pages. Omit this switch if you have
      <xref linkend="asciidoc" role="nodep"/> installed and wish to generate
      and install the man pages.
    </para>

    <para revision="sysv">
      <parameter>-D systemd_user_services=false</parameter>: This switch prevents
      the build process from installing systemd user services since they are
      useless on SysV systems.
    </para>

    <para>
      <command>meson configure -D debug=true</command>: This command enables
      some debug checks necessary for the test suite.  We don't want to
      enable them for the installed tinysparql libraries and programs, so
      we run the test suite after installation.
    </para>

  </sect2>


  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Library</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          tinysparql
        </seg>
        <seg>
          libtinysparql-3.0.so and
          libtracker-sparql-3.0.so
        </seg>
        <seg>
          /usr/{include,lib}/tinysparql-3.0 and
          /usr/share/doc/tinysparql-&tinysparql-version; (optional)
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="tinysparql-prog">
        <term><command>tinysparql</command></term>
        <listitem>
          <para>
            is a control program for TinySPARQL databases
          </para>
          <indexterm zone="tinysparql tinysparql-prog">
            <primary sortas="b-tinysparql">tinysparql</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtinysparql">
        <term><filename class="libraryfile">libtinysparql-3.0.so</filename></term>
        <listitem>
          <para>
            contains functions for administering TinySPARQL databases
          </para>
          <indexterm zone="tinysparql libtinysparql">
            <primary sortas="c-libtinysparql">libtinysparql-3.0.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtracker3-sparql">
        <term><filename class="libraryfile">libtracker-sparql-3.0.so</filename></term>
        <listitem>
          <para>
            contains resource management and database functions
          </para>
          <indexterm zone="tinysparql libtracker3-sparql">
            <primary sortas="c-libtracker3-sparql">libtracker-sparql-3.0.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
