<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY lmdb-download-http "https://github.com/LMDB/lmdb/archive/LMDB_&lmdb-version;.tar.gz">
  <!ENTITY lmdb-download-ftp  " ">
  <!ENTITY lmdb-md5sum        "9d7f059b1624d0a4d4b2f1781d08d600">
  <!ENTITY lmdb-size          "144 KB">
  <!ENTITY lmdb-buildsize     "4.7 MB">
  <!ENTITY lmdb-time          "less than 0.1 SBU">
]>

<sect1 id="lmdb" xreflabel="lmdb-&lmdb-version;">
  <?dbhtml filename="lmdb.html"?>


  <title>lmdb-&lmdb-version;</title>

  <indexterm zone="lmdb">
    <primary sortas="a-lmdb">lmdb</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to lmdb</title>

    <para>
      The <application>lmdb</application> package is a fast, compact, key-value
      embedded data store.  It uses memory-mapped files, so it has the read
      performance of a pure in-memory database while still offering the
      persistence of standard disk-based databases, and is only limited to the
      size of the virtual address space
    </para>

    &lfs123_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&lmdb-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&lmdb-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &lmdb-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &lmdb-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &lmdb-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &lmdb-time;
        </para>
      </listitem>
    </itemizedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of lmdb</title>

    <note>
      <para>
        This package extracts to lmdb-LMDB_&lmdb-version;.
      </para>
    </note>

    <para>
      Install <application>lmdb</application> by running the following
      commands:
    </para>

<screen><userinput>cd libraries/liblmdb &amp;&amp;
make                 &amp;&amp;
sed -i 's| liblmdb.a||' Makefile</userinput></screen>

    <para>
      This package does not come with a test suite.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make prefix=/usr install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <!--para>
      <command>sed ... prefix ... Makefile</command>: The Makefile creates the
      man pages directory during install if it is not present.
      This fixes the directory location.
    </para-->

    <para>
      <command>sed ... liblmdb.a ... Makefile</command>: The package executables
      use a static library so it must be created.  This command suppresses installation
      of the static library.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Program</segtitle>
      <segtitle>Installed Library</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          mdb_copy, mdb_dump, mdb_load, and mdb_stat
        </seg>
        <seg>
          liblmdb.so
        </seg>
        <seg>
          None
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="mdb_copy">
        <term><command>mdb_copy</command></term>
        <listitem>
          <para>
            copies an LMDB environment from one database to another, including
            the option to compact the database
          </para>
          <indexterm zone="lmdb mdb_copy">
            <primary sortas="b-mdb_copy">mdb_copy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mdb_dump">
        <term><command>mdb_dump</command></term>
        <listitem>
          <para>
            reads a database and writes its contents to standard output using
            a portable flat-text format, which can be interpeted by mdb_load
          </para>
          <indexterm zone="lmdb mdb_dump">
            <primary sortas="b-mdb_dump">mdb_dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mdb_load">
        <term><command>mdb_load</command></term>
        <listitem>
          <para>
            imports a database from standard input or from a file
          </para>
          <indexterm zone="lmdb mdb_load">
            <primary sortas="b-mdb_load">mdb_load</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mdb_stat">
        <term><command>mdb_stat</command></term>
        <listitem>
          <para>
            displays the status of a LMDB environment
          </para>
          <indexterm zone="lmdb mdb_stat">
            <primary sortas="b-mdb_stat">mdb_stat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblmdb">
        <term><filename class="libraryfile">liblmdb.so</filename></term>
        <listitem>
          <para>
             provides functions for accessing a LMDB database
          </para>
          <indexterm zone="lmdb liblmdb">
            <primary sortas="c-liblmdb">liblmdb.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
